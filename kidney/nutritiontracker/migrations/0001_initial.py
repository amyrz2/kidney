# Generated by Django 4.1.2 on 2022-12-02 06:20

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.IntegerField(blank=True)),
                ('gender', models.CharField(max_length=10)),
                ('birthday', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Journal_Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_datetime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'journal_entry',
            },
        ),
        migrations.CreateModel(
            name='Journal_Entry_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'journal_entry_type',
            },
        ),
        migrations.CreateModel(
            name='Measurement_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'measurement_type',
            },
        ),
        migrations.CreateModel(
            name='Modify_Info_Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'modify_info_entry',
            },
        ),
        migrations.CreateModel(
            name='Morbidity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morbidity_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'morbidity',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'stage',
            },
        ),
        migrations.CreateModel(
            name='Accountability_Partner',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('relationship', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'accountability_partner',
            },
            bases=('nutritiontracker.user',),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('doctor_specialization', models.CharField(blank=True, max_length=20)),
                ('doctor_license', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'doctor',
            },
            bases=('nutritiontracker.user',),
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=4)),
                ('modify', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.modify_info_entry')),
            ],
            options={
                'db_table': 'weight',
            },
        ),
        migrations.CreateModel(
            name='Morbidity_Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morbidity', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.morbidity')),
                ('stage', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.stage')),
            ],
            options={
                'db_table': 'morbidity_stage',
            },
        ),
        migrations.AddField(
            model_name='modify_info_entry',
            name='morbidity_stage',
            field=models.ManyToManyField(blank=True, to='nutritiontracker.morbidity_stage'),
        ),
        migrations.CreateModel(
            name='Journal_Line_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_quantity', models.DecimalField(decimal_places=2, max_digits=4)),
                ('item', models.CharField(max_length=50)),
                ('sodium', models.FloatField()),
                ('potassium', models.FloatField()),
                ('phosophorus', models.FloatField()),
                ('protein', models.FloatField()),
                ('water', models.FloatField()),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.journal_entry')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.journal_entry_type')),
            ],
            options={
                'db_table': 'journal_line_item',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=20)),
                ('serving_size', models.DecimalField(decimal_places=2, max_digits=8)),
                ('measurement_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.measurement_type')),
            ],
            options={
                'db_table': 'item',
            },
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feet', models.IntegerField()),
                ('inches', models.IntegerField()),
                ('modify', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.modify_info_entry')),
            ],
            options={
                'db_table': 'height',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('patient_DOB', models.DateField(help_text='Date of birthday')),
                ('patient_race', models.CharField(max_length=20)),
                ('user_gender', models.CharField(max_length=1)),
                ('doctor', models.ManyToManyField(blank=True, to='nutritiontracker.doctor')),
                ('partner', models.ManyToManyField(blank=True, to='nutritiontracker.accountability_partner')),
            ],
            options={
                'db_table': 'patient',
            },
            bases=('nutritiontracker.user',),
        ),
        migrations.AddField(
            model_name='modify_info_entry',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.patient'),
        ),
        migrations.AddField(
            model_name='journal_entry',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nutritiontracker.patient'),
        ),
    ]
